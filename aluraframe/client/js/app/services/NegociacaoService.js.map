{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","negociacao","getConnection","connection","dao","adiciona","apagaTodos","listaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService'; \r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService{\r\n\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana(){\r\n\r\n        return this._http.get('negociacoes/semana').then(negociacoes => {\r\n             return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n        }).catch(\r\n            erro => {\r\n                console.log(erro)\r\n                throw new Error(\"Não foi possivel obter as negociações da semana\");\r\n            }\r\n        )\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n\r\n        return this._http.get('negociacoes/anterior').then(negociacoes => {\r\n            return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n        }).catch(\r\n            erro => {\r\n                console.log(erro)\r\n                throw new Error(\"Não foi possivel obter as negociações da semana anterior\");\r\n            }\r\n        )\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada(){\r\n\r\n        return this._http.get('negociacoes/retrasada').then(negociacoes => {\r\n            return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n        }).catch(\r\n            erro => {\r\n                console.log(erro)\r\n                throw new Error(\"Não foi possivel obter as negociações da semana retrasada\");\r\n            }\r\n        );\r\n    }\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n            return negociacoes;\r\n\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\r\n    }\r\n\r\n    cadastra(negociacao){\r\n        return  ConnectionFactory.getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.adiciona(negociacao))\r\n        .then(() => \"Negociação adicionada com sucesso\")\r\n        .catch(() => {\r\n            console.log(erro);\r\n            throw new Error(\"Não foi possível adicionar a negociação\")\r\n        });\r\n    }\r\n    apaga(){\r\n\r\n        return ConnectionFactory.getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.apagaTodos())\r\n        .then(() => 'Negociações apagadas com sucesso')\r\n        .catch(erro =>{\r\n            console.log(erro);\r\n            throw new Error('Não foi possível apagar as negociações');\r\n        });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory.getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.listaTodos())\r\n        .catch(erro =>{\r\n            console.log(erro);\r\n            throw new Error(\"Não foi possível listar as negociações\");\r\n        })\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return  this.obterNegociacoes()\r\n        .then(negociacoes => \r\n            negociacoes.filter(negociacao => \r\n            !listaAtual.some(negociacaoExistente =>\r\n            negociacao.isEquals(negociacaoExistente)))\r\n        ).catch(erro =>{\r\n            console.log(erro);\r\n            throw new Error(\"Não foi possível importar negociações\");\r\n        })\r\n    }\r\n\r\n}"]}